{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "AgentConfiguration",
  "type": "object",
  "description": "The full configuration of an agent.\n\nManual: https://docs.hal.guru/models/",
  "properties": {
    "HalGuru": {
      "type": "object",
      "description": "The header metadata used in the hal.guru agentic process automation platform.\n\nManual: https://docs.hal.guru/models/",
      "properties": {
        "FilePurpose": {
          "title": "File Purpose",
          "type": [
            "null",
            "string"
          ],
          "description": "The purpose of the file.\n\nManual: https://docs.hal.guru/models/"
        },
        "PlatformVersion": {
          "title": "Platform Version",
          "type": [
            "null",
            "string"
          ],
          "description": "The version of the hal.guru platform in use.\n\nManual: https://docs.hal.guru/models/"
        },
        "PlatformUrl": {
          "title": "Platform URL",
          "type": [
            "null",
            "string"
          ],
          "description": "The URL of the hal.guru platform.\n\nManual: https://docs.hal.guru/models/"
        },
        "AutogeneratedAgentUrl": {
          "title": "Autogenerated Agent URL",
          "type": [
            "null",
            "string"
          ],
          "description": "The autogenerated URL for this agent.\n\nManual: https://docs.hal.guru/models/"
        }
      }
    },
    "Agent": {
      "type": "object",
      "description": "The AI Agent configuration.\n\n # Remarks: \n\n            The  class captures essential attributes such as the agent's unique identifier, name, type, version,\n            author details, and description. It also includes configurations for its behavior, startup logic, user-interface design, and themes.\n            This class facilitates general customization and configuration of robot agents for specific use cases.\n\nManual: https://docs.hal.guru/models/",
      "required": [
        "Name",
        "Type",
        "Version",
        "Start"
      ],
      "properties": {
        "Id": {
          "title": "Agent ID",
          "type": "string",
          "description": "The unique identifier for the agent (GUID ex. 12345678-1234-1234-1234-123456789012).\n\n # Remarks: \n\n            The Id property represents a globally unique identifier (GUID) assigned to the agent.\n            It is used to uniquely identify the agent within the system and across configurations.\n\nManual: https://docs.hal.guru/models/",
          "format": "guid"
        },
        "Name": {
          "title": "Agent Name",
          "type": "string",
          "description": "The name of the agent.\n\n # Remarks: \n\n            The Name property specifies the assigned name for the robot in the configuration.\n            It is used to distinguish the robot in various operational contexts and configurations.\n\nManual: https://docs.hal.guru/models/",
          "maxLength": 50,
          "minLength": 6
        },
        "Type": {
          "title": "Type of the Agent",
          "type": "string",
          "description": "Represents a basic agent type within the system. This type is generally used for the default or simplest form of agent functionality.\n\n # Remarks: \n\n            The Type property defines the classification of the robot based on its functionality or purpose.\n            It is used to identify the operational role of the robot within a system or application.\n\nManual: https://docs.hal.guru/models/",
          "enum": [
            "Basic"
          ]
        },
        "Version": {
          "title": "Version of the Agent",
          "type": "string",
          "description": "The version of the agent.\n\n # Remarks: \n\n             The Version property specifies the version of the agent's configuration or implementation.\n             It can be used to identify and differentiate between various iterations or releases of the agent.\n            \n             Version should be in the format: Major.Minor[.Patch] or GitVersionInfo\n            \n             It’s common practice to prefix your version names with the letter v.\n             Some good tag names might be v1.0.0 or v2.3.4.\n            \n             If the tag isn’t meant for production use, add a pre-release version after the version name.\n             Some good pre-release versions might be v0.2.0-alpha or v5.9-beta.3.\n\nManual: https://docs.hal.guru/models/",
          "default": "1.0.0",
          "minLength": 1,
          "pattern": "v?\\d+\\.\\d+(\\.\\d+)?(-[a-zA-Z0-9\\.]+)?(\\+[a-zA-Z0-9\\.]+)?"
        },
        "Description": {
          "title": "Description of the Agent",
          "type": [
            "null",
            "string"
          ],
          "description": "The description of the agent.\n\n # Remarks: \n\n            The Description property provides detailed information about the robot,\n            including its purpose, functionality, or any additional metadata relevant\n            to its usage and operational context.\n\nManual: https://docs.hal.guru/models/"
        },
        "Author": {
          "title": "Author of the Agent",
          "type": "object",
          "description": "Represents an author entity with metadata about an individual or organization.\n\n # Remarks: \n\n            The Author property provides metadata about the creator or maintainer of the robot.\n            It includes details such as the author's name, email, URL, company, and copyright information.\n            This information can be used for tracking and attribution purposes.\n            \n\n # Remarks: \n\n            The Author class is used to define descriptive metadata, such as the author's name, contact information, and associated works.\n            This metadata can be applied in various contexts, such as documentation, software components, or content creation.\n\nManual: https://docs.hal.guru/models/",
          "properties": {
            "Name": {
              "title": "Author Name",
              "type": [
                "null",
                "string"
              ],
              "description": "The name of the author.\n\n # Remarks: \n\n            The name may represent the full name of an individual author or the name of an organization.\n\nManual: https://docs.hal.guru/models/"
            },
            "Email": {
              "title": "Contact Email",
              "type": [
                "null",
                "string"
              ],
              "description": "The email address of the author.\n\n # Remarks: \n\n            The email address can be used for communication or identification purposes\n            in various contexts related to the author's metadata.\n\nManual: https://docs.hal.guru/models/"
            },
            "Url": {
              "title": "URL",
              "type": [
                "null",
                "string"
              ],
              "description": "The URL associated with the author.\n\n # Remarks: \n\n            The URL may link to the author's personal website, portfolio, or other relevant online resource.\n\nManual: https://docs.hal.guru/models/"
            },
            "Company": {
              "title": "Company",
              "type": [
                "null",
                "string"
              ],
              "description": "The company associated with the author.\n\n # Remarks: \n\n            This property represents the name of the organization or business the author is affiliated with.\n            It may provide contextual information about the author's professional background or association.\n\nManual: https://docs.hal.guru/models/"
            },
            "Copyright": {
              "title": "Copyright",
              "type": [
                "null",
                "string"
              ],
              "description": "The copyright information associated with the author or their works.\n\n # Remarks: \n\n            This property specifies the legal rights and protections claimed by the author or organization for their intellectual property.\n            It is typically represented by a notice specifying the year(s) of creation and the owner of the copyright.\n\nManual: https://docs.hal.guru/models/"
            }
          }
        },
        "Start": {
          "title": "Agent Start Configuration",
          "type": "object",
          "description": "Represents the start configuration for a robot.\nThis class defines the initial setup or parameters required when the robot is initiated.\n\n # Remarks: \n\n            The Start property defines the initial execution parameters or actions\n            that the robot will perform. It includes details such as the connector,\n            initial prompt, or messages necessary to initialize the robot's operation.\n\nManual: https://docs.hal.guru/models/",
          "required": [
            "LlmConnectorName"
          ],
          "properties": {
            "LlmConnectorName": {
              "title": "LLM Connector Name",
              "type": "string",
              "description": "Name of the LLM connector to be used from the LlmConnectors list.\n\nManual: https://docs.hal.guru/models/",
              "default": "",
              "maxLength": 50,
              "minLength": 5
            },
            "PromptName": {
              "type": [
                "null",
                "string"
              ],
              "description": "Name of the prompt to be used during the agent's initialization process.\n\nManual: https://docs.hal.guru/models/",
              "maxLength": 50,
              "minLength": 5
            },
            "Url": {
              "type": [
                "null",
                "string"
              ],
              "description": "URL associated with the start configuration of the agent.\n\nManual: https://docs.hal.guru/models/",
              "format": "uri"
            }
          }
        },
        "Themes": {
          "title": "Agent Themes",
          "type": "array",
          "description": "The collection of themes and their associated designs for the agent.\n\n # Remarks: \n\n            The Themes property maps a  to its corresponding .\n            This allows the agent to support multiple UI themes, such as Light and Dark, with customizable designs.\n\nManual: https://docs.hal.guru/models/",
          "xml": {
            "wrapped": true
          },
          "items": {
            "type": "object",
            "description": "Represents a design configuration for a specific theme,\nwhich may include settings related to chat appearance or other customizable elements.\n\nManual: https://docs.hal.guru/models/",
            "xml": {
              "name": "ThemeDesign"
            },
            "required": [
              "Theme",
              "Messages"
            ],
            "properties": {
              "Theme": {
                "title": "Theme",
                "type": "string",
                "description": "Represents the theme options available for a robot's display or functionality settings.\nProvides a selection of predefined appearance modes, designed to meet various\nuser preferences and environment requirements.\n\n # Remarks: \n\n            This property defines the visual theme utilized in the application's interface, such as  or .\n            It is integral for determining the aesthetic representation and adapting the user interface to different contexts or preferences.\n\nManual: https://docs.hal.guru/models/",
                "default": 0,
                "enum": [
                  "Light",
                  "Dark"
                ]
              },
              "Messages": {
                "title": "Messages (Theme Design)",
                "type": "array",
                "description": "Chat message themes associated with the theme design.\n\n # Remarks: \n\n            This class represents an agent's static configuration message, including its unique name and message content.\n            It is used within the system as part of agent configuration management.\n            \n\n # Remarks: \n\n            The  class allows configuration of:\n            - Icons via CSS classes, colors, or URLs.\n            - Background and text colors for enhanced customization.\n            Setting these properties helps ensure that chat messages conform to the desired visual styling.\n            \n\n # Remarks: \n\n            This property stores a list of  objects, each representing the configuration for a specific type of chat message,\n            such as agent messages, user messages, or system notifications. It encompasses customizable details like icon properties and background color,\n            enabling granular control over the presentation of messages within the theme.\n\nManual: https://docs.hal.guru/models/",
                "xml": {
                  "wrapped": true
                },
                "items": {
                  "type": "object",
                  "description": "Represents the visual theme for a chat message, including settings for icon appearance\nand text or background colors. This class defines customization properties that control\nthe overall design of individual chat messages.\n\nManual: https://docs.hal.guru/models/",
                  "xml": {
                    "name": "ChatMessageTheme"
                  },
                  "required": [
                    "MessageType"
                  ],
                  "properties": {
                    "MessageType": {
                      "title": "Message Type",
                      "type": "string",
                      "description": "Represents the type of a chat message in the system.\nUsed to categorize messages based on their source or purpose.\n\nManual: https://docs.hal.guru/models/",
                      "enum": [
                        "User",
                        "Agent",
                        "System",
                        "Busy",
                        "Error",
                        "Owner"
                      ]
                    },
                    "IconCssClass": {
                      "title": "Icon CSS Class",
                      "type": [
                        "null",
                        "string"
                      ],
                      "description": "The CSS class for the icon displayed in the user interface.\n\nManual: https://docs.hal.guru/models/"
                    },
                    "IconColor": {
                      "title": "Icon Color",
                      "type": [
                        "null",
                        "string"
                      ],
                      "description": "The color for the icon displayed in the user interface.\n\nManual: https://docs.hal.guru/models/"
                    },
                    "IconUrl": {
                      "title": "Icon URL",
                      "type": [
                        "null",
                        "string"
                      ],
                      "description": "The URL for the icon displayed in the user interface.\n\nManual: https://docs.hal.guru/models/"
                    },
                    "BackgroundColor": {
                      "title": "Background Color",
                      "type": [
                        "null",
                        "string"
                      ],
                      "description": "The background color for the user interface.\n\nManual: https://docs.hal.guru/models/"
                    },
                    "TextColor": {
                      "title": "Text Color",
                      "type": [
                        "null",
                        "string"
                      ],
                      "description": "The text color displayed in the user interface.\n\nManual: https://docs.hal.guru/models/"
                    }
                  }
                }
              }
            }
          }
        },
        "UI": {
          "title": "Agent User Interface",
          "type": "object",
          "description": "Represents the design configuration for an agent's user interface.\n\n # Remarks: \n\n            The UserInterface property defines the visual interface design elements for the robot.\n            It specifies configurations such as button behavior and appearance,\n            enabling customized user interactions based on the defined design settings.\n            \n\n # Remarks: \n\n            The  class provides properties to control the visual and behavioral aspects of an agent's user interface.\n            These settings allow for customization of the user experience tailored to specific requirements or preferences.\n\nManual: https://docs.hal.guru/models/",
          "properties": {
            "DisableCloseButton": {
              "title": "Disable Close Button",
              "type": [
                "boolean",
                "null"
              ],
              "description": "Indicates whether the close button should be disabled.\n\nManual: https://docs.hal.guru/models/"
            }
          }
        },
        "Features": {
          "title": "Agent Features",
          "type": "object",
          "description": "Defines the configurable properties that determine how an agent operates during its execution.\n\n # Remarks: \n\n            The Features property defines the specific functional attributes and\n            operational parameters of the robot. It encapsulates the settings that govern\n            behavior such as URL checks, validation logic, and retry attempts.\n\nManual: https://docs.hal.guru/models/",
          "properties": {
            "CheckAllUrls": {
              "title": "Check all URLs",
              "type": [
                "boolean",
                "null"
              ],
              "description": "Determines whether all URLs exist and are valid in the generated answer.\n\nManual: https://docs.hal.guru/models/"
            },
            "CheckIsAnswerCorrect": {
              "title": "Check answer",
              "type": [
                "boolean",
                "null"
              ],
              "description": "Determines whether the answer provided is evaluated as correct.\n\nManual: https://docs.hal.guru/models/"
            },
            "CheckIsLastUrlCorrectAnswer": {
              "title": "Check last URL",
              "type": [
                "boolean",
                "null"
              ],
              "description": "Determines whether the last URL in the provided collection is the correct answer.\n\nManual: https://docs.hal.guru/models/"
            },
            "CommentCurrentUrl": {
              "title": "Comment current URL",
              "type": [
                "boolean",
                "null"
              ],
              "description": "Determines whether the robot should comment the current URL.\n\nManual: https://docs.hal.guru/models/"
            },
            "PerChannelThreading": {
              "title": "Per channel threading",
              "type": [
                "boolean",
                "null"
              ],
              "description": "Determines whether a separate thread is created for each channel.\n\nManual: https://docs.hal.guru/models/"
            },
            "MaxRetryAttempts": {
              "title": "Retry on failure",
              "type": [
                "integer",
                "null"
              ],
              "description": "Determines whether the robot should retry the check fails.\n\nManual: https://docs.hal.guru/models/",
              "format": "int32"
            }
          }
        }
      }
    },
    "Operator": {
      "type": "object",
      "description": "The AI Agent configuration.\n\n # Remarks: \n\n            The  class captures essential attributes such as the agent's unique identifier, name, type, version,\n            author details, and description. It also includes configurations for its behavior, startup logic, user-interface design, and themes.\n            This class facilitates general customization and configuration of robot agents for specific use cases.\n\nManual: https://docs.hal.guru/models/",
      "required": [
        "Name"
      ],
      "properties": {
        "Name": {
          "title": "Agent Name",
          "type": "string",
          "description": "The name of the operator.\n\n # Remarks: \n\n            The Name property specifies the identifier for the operator, commonly used to label and distinguish\n            the operator within various operational and configuration contexts.\n            This property enforces constraints on the length of the name to ensure compliance with system requirements.\n\nManual: https://docs.hal.guru/models/",
          "maxLength": 50,
          "minLength": 6
        },
        "UI": {
          "title": "Operator User Interface",
          "type": "object",
          "description": "Defines the design configuration and personalized settings for an operator's user interface.\n\n # Remarks: \n\n            The UI property specifies the design and configuration settings\n            related to the operator's user interface. This property facilitates\n            defining the operator's visual interaction elements, user experience customizations,\n            and general UI-related features tailored to specific operational requirements.\n            \n\n # Remarks: \n\n            The  class encapsulates properties and behaviors for tailoring the operator experience.\n            It enables configuration of both display elements and functionalities for specific operational needs or preferences.\n\nManual: https://docs.hal.guru/models/"
        },
        "Features": {
          "title": "Operator Features",
          "type": "object",
          "description": "Defines the configurable properties that determine how an operator operates during its execution.\n\n # Remarks: \n\n            The Features property represents the configurable attributes and functionalities\n            of the operator. It defines the operator's behavior and operational characteristics\n            during execution, enabling customization for specific tasks or workflows.\n\nManual: https://docs.hal.guru/models/"
        }
      }
    },
    "Messages": {
      "type": "array",
      "description": "Static messages used for quick access within the system.\n\nManual: https://docs.hal.guru/models/",
      "xml": {
        "wrapped": true
      },
      "items": {
        "type": "object",
        "description": "Defines a static message and its associated metadata for an agent.\n\nManual: https://docs.hal.guru/models/",
        "xml": {
          "name": "AgentStaticMessage"
        },
        "required": [
          "Name",
          "Message"
        ],
        "properties": {
          "Name": {
            "title": "Name",
            "type": "string",
            "description": "The name of the static message for the agent.\n\nManual: https://docs.hal.guru/models/",
            "minLength": 1
          },
          "Message": {
            "title": "Message",
            "type": "string",
            "description": "Content of the static message for the agent.\n\nManual: https://docs.hal.guru/models/",
            "minLength": 1
          }
        }
      }
    },
    "Prompts": {
      "type": "array",
      "description": "Prompts available within the agent's configuration.\n\nManual: https://docs.hal.guru/models/",
      "xml": {
        "wrapped": true
      },
      "items": {
        "type": "object",
        "description": "Represents a prompt model containing a name and the associated prompt text.\n\nManual: https://docs.hal.guru/models/",
        "xml": {
          "name": "AgentPrompt"
        },
        "required": [
          "Name",
          "Prompt"
        ],
        "properties": {
          "Name": {
            "type": "string",
            "description": "The name of the prompt.\n\nManual: https://docs.hal.guru/models/",
            "maxLength": 20,
            "minLength": 6
          },
          "Prompt": {
            "type": "string",
            "description": "The text content of the prompt.\n\nManual: https://docs.hal.guru/models/",
            "minLength": 1
          }
        }
      }
    },
    "LlmConnectors": {
      "type": "array",
      "description": "LLM connector configurations.\n\n # Remarks: \n\n            The LlmConnector class encapsulates settings and parameters required to interact with and utilize\n            an LLM. It includes properties for specifying the provider, model, behavior, authentication, and\n            additional tools or services tied to the LLM connection.\n\nManual: https://docs.hal.guru/models/",
      "xml": {
        "wrapped": true
      },
      "items": {
        "type": "object",
        "description": "Represents a configuration object for connecting to a Large Language Model (LLM) provider.\n\nManual: https://docs.hal.guru/models/",
        "xml": {
          "name": "LlmConnector"
        },
        "properties": {
          "Name": {
            "type": "string",
            "description": "Represents the name assigned to the LLM Connector configuration.\n\n # Remarks: \n\n            This property is used to identify the specific configuration instance,\n            and can be utilized for organizational or reference purposes.\n\nManual: https://docs.hal.guru/models/"
          },
          "LlmProvider": {
            "type": "string",
            "description": "Represents an enum value for the DeepSeek provider in the LlmProvider enumeration.\n\nManual: https://docs.hal.guru/models/",
            "enum": [
              "Echo",
              "OpenAIChat",
              "OpenAIAssistant",
              "LMStudio",
              "XAI",
              "DeepSeek",
              "Azure",
              "Google"
            ]
          },
          "Model": {
            "type": "string",
            "description": "Specifies the model identifier to use within the LLM Connector instance.\n\nManual: https://docs.hal.guru/models/"
          },
          "Temperature": {
            "type": "number",
            "description": "Specifies the randomness of responses generated by the language model,\nwith lower values resulting in less random outputs and higher\nvalues increasing creativity and variability.\n\nManual: https://docs.hal.guru/models/",
            "format": "double"
          },
          "MaxTokens": {
            "type": "integer",
            "description": "Specifies the maximum number of tokens the model will generate in its response.\n\nManual: https://docs.hal.guru/models/",
            "format": "int32"
          },
          "AssistantId": {
            "type": [
              "null",
              "string"
            ],
            "description": "Identifies the specific assistant model or instance used within the LLM connection.\n\nManual: https://docs.hal.guru/models/"
          },
          "VectorStoreId": {
            "type": [
              "null",
              "string"
            ],
            "description": "Identifier for the associated vector store.\n\nManual: https://docs.hal.guru/models/"
          },
          "ApiKey": {
            "type": [
              "null",
              "string"
            ],
            "description": "Represents the API key used to authenticate with the LLM provider.\n\n # Remarks: \n\n            This property stores the authentication key required for accessing services provided by the\n            specified LLM provider. Ensure that this key is managed securely and complies with best practices\n            for sensitive information handling.\n\nManual: https://docs.hal.guru/models/"
          },
          "InstructionsPrompt": {
            "type": [
              "null",
              "string"
            ],
            "description": "Specifies the custom instructions or contextual guidance provided to the LLM for tailoring its responses.\n\n # Remarks: \n\n            This property allows setting predefined prompts or guidelines that influence the behavior and tone of the LLM's output.\n            It can be used to define specific tasks, roles, or response formats for the model.\n\nManual: https://docs.hal.guru/models/"
          },
          "Tools": {
            "type": "array",
            "description": "Represents a collection of tools or additional functionalities associated with the LLM connection.\n\n # Remarks: \n\n            This property holds a list of tool identifiers or names that extend or complement the capabilities\n            of the LLM. These tools can be used to enhance interactions, provide additional processing, or\n            implement custom logic during the LLM's operation.\n\nManual: https://docs.hal.guru/models/",
            "xml": {
              "wrapped": true
            },
            "items": {
              "type": "string",
              "xml": {
                "name": "string"
              }
            }
          },
          "ApiUrl": {
            "type": [
              "null",
              "string"
            ],
            "description": "Represents the base URL of the API used to connect to the Large Language Model (LLM) provider.\n\nManual: https://docs.hal.guru/models/"
          }
        }
      }
    },
    "Secrets": {
      "type": "array",
      "description": "Key-value pairs used to store sensitive information.\n\n # Remarks: \n\n            The Key property is a unique identifier for the secret, while the Secret property contains the sensitive value itself.\n            Both properties are required and validated based on their respective attributes.\n\nManual: https://docs.hal.guru/models/",
      "xml": {
        "wrapped": true
      },
      "items": {
        "type": "object",
        "description": "Represents a key-value pair used for storing sensitive information in an agent's configuration.\n\nManual: https://docs.hal.guru/models/",
        "xml": {
          "name": "AgentSecret"
        },
        "required": [
          "Key",
          "Secret"
        ],
        "properties": {
          "Key": {
            "title": "Secret Key",
            "type": "string",
            "description": "The name of the secret key.\n\nManual: https://docs.hal.guru/models/",
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9_\\-]+$"
          },
          "Secret": {
            "title": "Secret Value",
            "type": "string",
            "description": "The value of the secret key.\n\nManual: https://docs.hal.guru/models/",
            "minLength": 1
          }
        }
      }
    },
    "State": {
      "description": "The state of the agent.\n\nManual: https://docs.hal.guru/models/",
      "oneOf": [
        {
          "type": "null"
        },
        {
          "type": "object",
          "description": "Defines the operational state and associated metadata for a session of an agent.\n\nManual: https://docs.hal.guru/models/",
          "properties": {
            "Started": {
              "title": "Started",
              "type": [
                "null",
                "string"
              ],
              "description": "The moment when the agent AI is initiated.\n\nManual: https://docs.hal.guru/models/",
              "format": "date-time"
            },
            "LastAccess": {
              "title": "Last Access",
              "type": [
                "null",
                "string"
              ],
              "description": "Last access to the agent.\n\nManual: https://docs.hal.guru/models/",
              "format": "date-time"
            },
            "IsStarted": {
              "title": "Is Started",
              "type": [
                "boolean",
                "null"
              ],
              "description": "Indicates whether the agent has been started.\n\nManual: https://docs.hal.guru/models/"
            },
            "ThreadId": {
              "title": "Thread Id",
              "type": [
                "null",
                "string"
              ],
              "description": "The identifier of the thread associated with the agent.\n\nManual: https://docs.hal.guru/models/"
            },
            "LlmConnectorName": {
              "title": "LLM Connector Name",
              "type": [
                "null",
                "string"
              ],
              "description": "The name of the LLM connector associated with the agent.\n\nManual: https://docs.hal.guru/models/"
            },
            "PromptName": {
              "title": "Prompt Name",
              "type": [
                "null",
                "string"
              ],
              "description": "The name of the currently active prompt associated with the agent.\n\nManual: https://docs.hal.guru/models/"
            },
            "Url": {
              "title": "Url",
              "type": [
                "null",
                "string"
              ],
              "description": "The URL associated with the agent state.\n\nManual: https://docs.hal.guru/models/"
            },
            "Language": {
              "title": "Language",
              "type": [
                "null",
                "string"
              ],
              "description": "The language associated with the agent state.\n\nManual: https://docs.hal.guru/models/"
            },
            "Description": {
              "type": [
                "null",
                "string"
              ],
              "description": "A brief description or details regarding the agent state.\n\nManual: https://docs.hal.guru/models/"
            },
            "Variables": {
              "type": [
                "array",
                "null"
              ],
              "description": "A collection of variables associated with the agent state.\n\nManual: https://docs.hal.guru/models/",
              "xml": {
                "wrapped": true
              },
              "items": {
                "type": "object",
                "xml": {
                  "name": "Variable"
                },
                "required": [
                  "Name",
                  "Type"
                ],
                "properties": {
                  "Name": {
                    "title": "Variable Name",
                    "type": "string",
                    "description": "The name of the variable.\n\nManual: https://docs.hal.guru/models/",
                    "maxLength": 100,
                    "minLength": 1
                  },
                  "Type": {
                    "type": "string",
                    "description": "",
                    "default": 7,
                    "enum": [
                      "Custom",
                      "DateTime",
                      "Date",
                      "Time",
                      "Duration",
                      "PhoneNumber",
                      "Currency",
                      "Text",
                      "Html",
                      "MultilineText",
                      "EmailAddress",
                      "Password",
                      "Url",
                      "ImageUrl",
                      "CreditCard",
                      "PostalCode",
                      "Upload"
                    ]
                  },
                  "Value": {
                    "type": [
                      "null",
                      "string"
                    ],
                    "description": "The value of the variable.\n\nManual: https://docs.hal.guru/models/"
                  }
                }
              }
            }
          }
        }
      ]
    },
    "TestCases": {
      "type": "array",
      "description": "Test cases for validating the behavior of an agent.\n\nManual: https://docs.hal.guru/models/",
      "xml": {
        "wrapped": true
      },
      "items": {
        "type": "object",
        "description": "Represents a test case for validating an agent's response to a given input.\n\nManual: https://docs.hal.guru/models/",
        "xml": {
          "name": "AgentTestCase"
        },
        "required": [
          "Name",
          "QuestionMessage"
        ],
        "properties": {
          "Name": {
            "title": "Test Name",
            "type": "string",
            "description": "The name of the test case.\n\nManual: https://docs.hal.guru/models/",
            "minLength": 1
          },
          "QuestionMessage": {
            "title": "Question Message",
            "type": "string",
            "description": "The question or input message directed to the agent.\n\nManual: https://docs.hal.guru/models/",
            "minLength": 1
          },
          "AnswerMessageContains": {
            "title": "Answer Message Contains",
            "type": [
              "array",
              "null"
            ],
            "description": "A list of substrings that the output message is expected to contain.\n\nManual: https://docs.hal.guru/models/",
            "xml": {
              "wrapped": true
            },
            "items": {
              "type": "string",
              "xml": {
                "name": "string"
              }
            }
          },
          "AnswerMessageRegex": {
            "title": "Answer Message Regex",
            "type": [
              "null",
              "string"
            ],
            "description": "A regular expression pattern that the agent's response should conform to.\n\nManual: https://docs.hal.guru/models/"
          }
        }
      }
    },
    "ExampleMessages": {
      "type": "array",
      "description": "Example messages that demonstrate input-output interactions for an agent.\n\nManual: https://docs.hal.guru/models/",
      "xml": {
        "wrapped": true
      },
      "items": {
        "type": "object",
        "description": "Represents an example message used for interactions by a robot.\n\nManual: https://docs.hal.guru/models/",
        "xml": {
          "name": "AgentExampleMessage"
        },
        "properties": {
          "Input": {
            "type": "string",
            "description": "Gets or sets the message provided as input by the user.\n\nManual: https://docs.hal.guru/models/"
          },
          "Output": {
            "type": "string",
            "description": "Gets or sets the response message generated by the service.\n\nManual: https://docs.hal.guru/models/"
          }
        }
      }
    }
  }
}